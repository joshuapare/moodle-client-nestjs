/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner } from './core-blog-get-entries-200-response-entries-inner-summaryfiles-inner';


export interface ModWorkshopGetWorkshopsByCourses200ResponseWorkshopsInner { 
    /**
     * 0 = will be closed manually, greater than 0 the timestamp of the end of the assessment phase.
     */
    Assessmentend?: number;
    /**
     * 0 = will be started manually, greater than 0 the timestamp of the start of the assessment phase.
     */
    Assessmentstart?: number;
    /**
     * A text to be displayed at the end of the workshop.
     */
    Conclusion?: string;
    Conclusionfiles?: Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>;
    /**
     * conclusion format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     */
    Conclusionformat?: number;
    /**
     * Course id this workshop is part of.
     */
    Course?: number;
    /**
     * coursemodule
     */
    Coursemodule?: number;
    /**
     * The recently used grading evaluation method.
     */
    Evaluation?: string;
    /**
     * 0 = example assessments are voluntary, 1 = examples must be assessed before submission,                     2 = examples are available after own submission and must be assessed before peer/self assessment phase.
     */
    Examplesmode?: number;
    /**
     * The maximum grade for submission.
     */
    Grade?: number;
    /**
     * Number of digits that should be shown after the decimal point when displaying grades.
     */
    Gradedecimals?: number;
    /**
     * The maximum grade for assessment.
     */
    Gradinggrade?: number;
    /**
     * The primary key of the record.
     */
    Id?: number;
    /**
     * Instructions for the submission phase.
     */
    Instructauthors?: string;
    Instructauthorsfiles?: Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>;
    /**
     * instructauthors format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     */
    Instructauthorsformat?: number;
    /**
     * Instructions for the assessment phase.
     */
    Instructreviewers?: string;
    Instructreviewersfiles?: Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>;
    /**
     * instructreviewers format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     */
    Instructreviewersformat?: number;
    /**
     * Workshop introduction text.
     */
    Intro?: string;
    Introfiles?: Array<CoreBlogGetEntries200ResponseEntriesInnerSummaryfilesInner>;
    /**
     * intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     */
    Introformat?: number;
    /**
     * Forced activity language
     */
    Lang?: string;
    /**
     * Allow submitting the work after the deadline.
     */
    Latesubmissions?: boolean;
    /**
     * Maximum size of the one attached file.
     */
    Maxbytes?: number;
    /**
     * Workshop name.
     */
    Name?: string;
    /**
     * Maximum number of submission attachments.
     */
    Nattachments?: number;
    /**
     * Number of allowed attachments to the overall feedback.
     */
    Overallfeedbackfiles?: number;
    /**
     * Comma separated list of file extensions.
     */
    Overallfeedbackfiletypes?: string;
    /**
     * Maximum size of one file attached to the overall feedback.
     */
    Overallfeedbackmaxbytes?: number;
    /**
     * Mode of the overall feedback support.
     */
    Overallfeedbackmode?: number;
    /**
     * The current phase of workshop (0 = not available, 1 = submission, 2 = assessment, 3 = closed).
     */
    Phase?: number;
    /**
     * Automatically switch to the assessment phase after the submissions deadline.
     */
    Phaseswitchassessment?: boolean;
    /**
     * The type of the current grading strategy used in this workshop.
     */
    Strategy?: string;
    /**
     * 0 = will be closed manually, greater than 0 the timestamp of the end of the submission phase.
     */
    Submissionend?: number;
    /**
     * Comma separated list of file extensions.
     */
    Submissionfiletypes?: string;
    /**
     * 0 = will be started manually, greater than 0 the timestamp of the start of the submission phase.
     */
    Submissionstart?: number;
    /**
     * Indicates whether a file upload is required as part of each submission. 0 for no, 1 for optional, 2 for required.
     */
    Submissiontypefile?: number;
    /**
     * Indicates whether text is required as part of each submission. 0 for no, 1 for optional, 2 for required.
     */
    Submissiontypetext?: number;
    /**
     * The timestamp when the module was modified.
     */
    Timemodified?: number;
    /**
     * Optional feature: students practise evaluating on example submissions from teacher.
     */
    Useexamples?: boolean;
    /**
     * Optional feature: students perform peer assessment of others\' work.
     */
    Usepeerassessment?: boolean;
    /**
     * Optional feature: students perform self assessment of their own work.
     */
    Useselfassessment?: boolean;
}

