/**
 * Moodle Webservice API
 * Auto-generated OpenAPI spec for Moodle\'s Webservice API. Requires installation of the Catalyst RESTful API plugin: https://github.com/catalyst/moodle-webservice_restful.
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner } from './core-block-get-dashboard-blocks-200-response-blocks-inner-contents-files-inner';
import { ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInnerConfigsInner } from './mod-assign-get-assignments-200-response-courses-inner-assignments-inner-configs-inner';


/**
 * assignment information object
 */
export interface ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInner { 
    /**
     * Description of activity
     */
    Activity?: string;
    Activityattachments?: Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>;
    /**
     * activity format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     */
    Activityformat?: number;
    /**
     * allow submissions from date
     */
    Allowsubmissionsfromdate?: number;
    /**
     * method used to control opening new attempts
     */
    Attemptreopenmethod?: string;
    /**
     * if enabled, hide identities until reveal identities actioned
     */
    Blindmarking?: number;
    /**
     * course module id
     */
    Cmid?: number;
    /**
     * if enabled, set activity as complete following submission
     */
    Completionsubmit?: number;
    Configs?: Array<ModAssignGetAssignments200ResponseCoursesInnerAssignmentsInnerConfigsInner>;
    /**
     * course id
     */
    Course?: number;
    /**
     * date after which submission is not accepted without an extension
     */
    Cutoffdate?: number;
    /**
     * assignment due date
     */
    Duedate?: number;
    /**
     * grade type
     */
    Grade?: number;
    /**
     * the expected date for marking the submissions
     */
    Gradingduedate?: number;
    /**
     * If enabled, hide grader to student
     */
    Hidegrader?: number;
    /**
     * assignment id
     */
    Id?: number;
    /**
     * assignment intro, not allways returned because it deppends on the activity configuration
     */
    Intro?: string;
    Introattachments?: Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>;
    Introfiles?: Array<CoreBlockGetDashboardBlocks200ResponseBlocksInnerContentsFilesInner>;
    /**
     * intro format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     */
    Introformat?: number;
    /**
     * enable marking allocation
     */
    Markingallocation?: number;
    /**
     * enable marking workflow
     */
    Markingworkflow?: number;
    /**
     * maximum number of attempts allowed
     */
    Maxattempts?: number;
    /**
     * assignment name
     */
    Name?: string;
    /**
     * no submissions
     */
    Nosubmissions?: number;
    /**
     * Prevent submission not in group
     */
    Preventsubmissionnotingroup?: number;
    /**
     * if enabled, all team members must submit
     */
    Requireallteammemberssubmit?: number;
    /**
     * student must accept submission statement
     */
    Requiresubmissionstatement?: number;
    /**
     * show identities for a blind marking assignment
     */
    Revealidentities?: number;
    /**
     * send notifications
     */
    Sendlatenotifications?: number;
    /**
     * send notifications
     */
    Sendnotifications?: number;
    /**
     * send student notifications (default)
     */
    Sendstudentnotifications?: number;
    /**
     * Flag to only show files during submission
     */
    Submissionattachments?: number;
    /**
     * submissions drafts
     */
    Submissiondrafts?: number;
    /**
     * Submission statement formatted.
     */
    Submissionstatement?: string;
    /**
     * submissionstatement format (1 = HTML, 0 = MOODLE, 2 = PLAIN, or 4 = MARKDOWN)
     */
    Submissionstatementformat?: number;
    /**
     * if enabled, students submit as a team
     */
    Teamsubmission?: number;
    /**
     * the grouping id for the team submission groups
     */
    Teamsubmissiongroupingid?: number;
    /**
     * Time limit to complete assigment
     */
    Timelimit?: number;
    /**
     * last time assignment was modified
     */
    Timemodified?: number;
}

